/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package GUI.Colaborador;

import Estructuras.ListaSimple;
import Excepciones.BuildingAlreadyExists;
import Excepciones.BuildingNotFound;
import Excepciones.ClassroomNotFound;
import Excepciones.RepeatedSchedule;
import Excepciones.StudenNotExistsInHashTable;
import Excepciones.StudentAlreadyExists;
import Excepciones.SubjectAlreadyExists;
import Excepciones.SubjectNotFound;
import Excepciones.TeacherAlreadyExists;
import Excepciones.UserAlreadyExists;
import GUI.Estudiante.Main_Estudiante;
import GUI.Login;
import Modelos.Catedratico;
import Modelos.Curso;
import Modelos.Edificio;
import Modelos.Estudiante;
import Modelos.Horario;
import Modelos.Salon;
import Modelos.Usuario;
import Nodos.NodoSimple;
import java.io.File;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import javax.swing.BoxLayout;
import javax.swing.JCheckBox;
import javax.swing.JComboBox;
import javax.swing.JFileChooser;
import static javax.swing.JFileChooser.APPROVE_OPTION;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JTextField;
import javax.swing.filechooser.FileNameExtensionFilter;
import parser.FileHandler;

/**
 *
 * @author Anclenius
 */
public class Main_Colaborador extends javax.swing.JFrame {

    /**
     * Creates new form Main_Colaborador
     */
    private static SimpleDateFormat format = new SimpleDateFormat("hh:mm");
    public Main_Colaborador(boolean val) {
        initComponents();
        this.setVisible(true);
        this.jButton13.setVisible(val);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButton1 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jButton2 = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        jButton6 = new javax.swing.JButton();
        jButton7 = new javax.swing.JButton();
        jButton8 = new javax.swing.JButton();
        jButton9 = new javax.swing.JButton();
        jButton10 = new javax.swing.JButton();
        jButton11 = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        jButton12 = new javax.swing.JButton();
        jButton13 = new javax.swing.JButton();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenuItem1 = new javax.swing.JMenuItem();
        jMenuItem2 = new javax.swing.JMenuItem();
        jMenuItem3 = new javax.swing.JMenuItem();
        jMenuItem4 = new javax.swing.JMenuItem();
        jMenu2 = new javax.swing.JMenu();
        jMenuItem5 = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Colaborador");

        jButton1.setText("Crear Usuario");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jLabel1.setText("Usuario");

        jButton2.setText("Modificar Usuario");
        jButton2.setEnabled(false);
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jLabel2.setText("  Edificios y Salones ");

        jButton3.setText("Crear Edificio");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jButton4.setText("Crear Salon");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        jButton5.setText("Modificar Salon");
        jButton5.setEnabled(false);

        jLabel3.setText("Cursos");

        jButton6.setText("Crear Estudiante");
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });

        jButton7.setText("Modificar Estudiante");
        jButton7.setEnabled(false);

        jButton8.setText("Crear Catedratico");
        jButton8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton8ActionPerformed(evt);
            }
        });

        jButton9.setText("Modificar Catedratico");
        jButton9.setEnabled(false);

        jButton10.setText("Crear Curso");
        jButton10.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton10ActionPerformed(evt);
            }
        });

        jButton11.setText("Modificar Curso");
        jButton11.setEnabled(false);

        jLabel4.setText("Horario");

        jButton12.setText("Crear Horario");
        jButton12.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton12ActionPerformed(evt);
            }
        });

        jButton13.setText("IMPORTAR");
        jButton13.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton13ActionPerformed(evt);
            }
        });

        jMenu1.setText("Reportes");

        jMenuItem1.setText("Buscar Asignaciones Estudiante");
        jMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem1ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem1);

        jMenuItem2.setText("Buscar Cursos en Salon");
        jMenuItem2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem2ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem2);

        jMenuItem3.setText("Buscar por Semestre");
        jMenuItem3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem3ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem3);

        jMenuItem4.setText("Buscar Estudiantes Asignados a un Horario");
        jMenuItem4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem4ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem4);

        jMenuBar1.add(jMenu1);

        jMenu2.setText("Sistema");

        jMenuItem5.setText("Cerrar Sesion");
        jMenuItem5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem5ActionPerformed(evt);
            }
        });
        jMenu2.add(jMenuItem5);

        jMenuBar1.add(jMenu2);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(39, 39, 39)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jButton7, javax.swing.GroupLayout.PREFERRED_SIZE, 161, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(jButton9, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jButton8, javax.swing.GroupLayout.PREFERRED_SIZE, 161, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(446, 446, 446))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jButton1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jButton2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addGap(44, 44, 44))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(35, 35, 35)
                                        .addComponent(jLabel1))
                                    .addComponent(jButton6, javax.swing.GroupLayout.PREFERRED_SIZE, 161, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 134, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(jButton5, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jButton4, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 134, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jLabel2))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(104, 104, 104)
                                .addComponent(jLabel4))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(98, 98, 98)
                                .addComponent(jLabel3))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(53, 53, 53)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jButton13, javax.swing.GroupLayout.PREFERRED_SIZE, 156, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jButton12, javax.swing.GroupLayout.PREFERRED_SIZE, 156, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(jButton11, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(jButton10, javax.swing.GroupLayout.PREFERRED_SIZE, 156, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                        .addGap(59, 59, 59))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jLabel2)
                    .addComponent(jLabel3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton6, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jButton10, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jButton11, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jButton5, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel4))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButton7, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton12, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton8, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton9, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButton13, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(23, 23, 23))))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem1ActionPerformed
        long a = getCarnet();
        Estudiante estudiante = Controlador.Estructuras.estudiantes.buscar(a);
        if(estudiante != null) {
            new Main_Estudiante(estudiante);
        } else {
            JOptionPane.showMessageDialog(null, "Estudiante no encontrado");
        }
        
    }//GEN-LAST:event_jMenuItem1ActionPerformed

    private void jMenuItem2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem2ActionPerformed
        int numeroSalon = getSalon();
         
    }//GEN-LAST:event_jMenuItem2ActionPerformed

    private void jMenuItem3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem3ActionPerformed
        int semestre = getSemestre();
        new AprobadosReprobados(semestre);
    }//GEN-LAST:event_jMenuItem3ActionPerformed

    private void jMenuItem4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem4ActionPerformed
        buscarHorario();
    }//GEN-LAST:event_jMenuItem4ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        try {
            crearUsuario();
        } catch (CloneNotSupportedException ex) {
            System.out.println("Error sin precedencia");
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
        try {
            crearEstudiante();
        } catch(Exception ex){
            System.out.println("Error sin precedencia");
        }
    }//GEN-LAST:event_jButton6ActionPerformed

    private void jButton8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton8ActionPerformed
        try {
            crearCatedratico();
        } catch (Exception ex) {
            System.out.println("Error sin precedencia");
        }
    }//GEN-LAST:event_jButton8ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        try {
            crearEdificio();
        } catch (Exception ex) {
            System.out.println("Error sin precedencia");
        }
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        try {
            crearSalon();
        } catch(Exception ex) {
            System.out.println("Error sin precedencia");
        }
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButton10ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton10ActionPerformed
        try {
            crearCurso();
        } catch(Exception ex) {
            System.out.println("Error sin precedencia");
        }
    }//GEN-LAST:event_jButton10ActionPerformed

    private void jButton12ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton12ActionPerformed
        try {
            crearHorario();
        } catch(Exception ex) {
            ex.printStackTrace();
        }
    }//GEN-LAST:event_jButton12ActionPerformed

    private void jMenuItem5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem5ActionPerformed
        this.dispose();
        Login log = new Login();
        log.setVisible(true);
    }//GEN-LAST:event_jMenuItem5ActionPerformed

    private void jButton13ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton13ActionPerformed
          try{
            String path="";
            JFileChooser fileOpener = new JFileChooser();
            fileOpener.setAcceptAllFileFilterUsed(false);
            int seleccion = fileOpener.showOpenDialog(this);
            if(seleccion == APPROVE_OPTION){
                File directory = new File(path);
                System.out.println(directory.getAbsolutePath());
                System.out.println(directory.getName());
                path = fileOpener.getSelectedFile().getPath();
                FileHandler handler = new FileHandler();
                handler.read(path);
            }
            JOptionPane.showMessageDialog(null, "Carga de archivos Completada con exito");
        }catch(Throwable e){
            e.printStackTrace();
            JOptionPane.showMessageDialog(null, "Carga de archivos Fallo");
        }
    }//GEN-LAST:event_jButton13ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton2ActionPerformed
    
    private void crearUsuario() throws CloneNotSupportedException{
        JPanel panel = new JPanel();
        panel.setLayout(new BoxLayout(panel, BoxLayout.Y_AXIS));
        JLabel l1 = new JLabel("ID: ");
        JTextField f1 = new JTextField();
        f1.setColumns(5);
        JLabel l2 = new JLabel("Nombre: ");
        JTextField f2 = new JTextField();
        f2.setColumns(10);
        JLabel l3 = new JLabel("Contraseña: ");
        JTextField f3 = new JTextField();
        f3.setColumns(10);
        JLabel l4 = new JLabel("Direccion: ");
        JTextField f4 = new JTextField();
        f4.setColumns(10);
        JCheckBox box = new JCheckBox("Estudiante?");
        panel.add(l1);
        panel.add(f1);
        panel.add(l2);
        panel.add(f2);
        panel.add(l3);
        panel.add(f3);
        panel.add(l4);
        panel.add(f4);
        panel.add(box);
        
        String[] options = new String[]{"Cancelar", "Aceptar"};
        int option = JOptionPane.showOptionDialog(null, panel, "Crear Usuario",
                        JOptionPane.NO_OPTION, JOptionPane.PLAIN_MESSAGE,
                        null, options, options[1]);
        if(option == 1) {
            long a1 = Long.parseLong(f1.getText());
            String a2 = f2.getText();
            String a3 = f3.getText();
            String a4 = f4.getText();
            boolean a5 = box.isSelected();
            Usuario usuario = new Usuario(a1,a2,a4,a3,true,a5);
            try{
                Controlador.Estructuras.agregarUsuario(usuario);
                JOptionPane.showMessageDialog(null, "Usuario " + a1 + " insertado con exito, revisar la grafica");
            } catch (UserAlreadyExists|StudenNotExistsInHashTable ex) {
                JOptionPane.showMessageDialog(null, ex.getMessage());
            }
            
        }
       
    }
    
    private void crearEstudiante() throws CloneNotSupportedException{
        JPanel panel = new JPanel();
        panel.setLayout(new BoxLayout(panel, BoxLayout.Y_AXIS));
        JLabel l1 = new JLabel("ID: ");
        JTextField f1 = new JTextField();
        f1.setColumns(5);
        JLabel l2 = new JLabel("Nombre: ");
        JTextField f2 = new JTextField();
        f2.setColumns(10);
        JLabel l4 = new JLabel("Direccion: ");
        JTextField f4 = new JTextField();
        f4.setColumns(10);
        panel.add(l1);
        panel.add(f1);
        panel.add(l2);
        panel.add(f2);
        panel.add(l4);
        panel.add(f4);
        
        String[] options = new String[]{"Cancelar", "Aceptar"};
        int option = JOptionPane.showOptionDialog(null, panel, "Crear Estudiante",
                        JOptionPane.NO_OPTION, JOptionPane.PLAIN_MESSAGE,
                        null, options, options[1]);
        if(option == 1) {
            long a1 = Long.parseLong(f1.getText());
            String a2 = f2.getText();
            String a4 = f4.getText();
            Estudiante estudiante = new Estudiante(a1, a2, a4);
            try {
                Controlador.Estructuras.agregarEstudiante(estudiante);
                JOptionPane.showMessageDialog(null, "Estudiante " + a1 + " insertado con exito, revisar la grafica");
            }catch (StudentAlreadyExists ex){
                JOptionPane.showMessageDialog(null, ex.getMessage());
            }
            
        }
            
            
        
    }
    
    private void crearCatedratico() throws CloneNotSupportedException{
        JPanel panel = new JPanel();
        panel.setLayout(new BoxLayout(panel, BoxLayout.Y_AXIS));
        JLabel l1 = new JLabel("ID: ");
        JTextField f1 = new JTextField();
        f1.setColumns(5);
        JLabel l2 = new JLabel("Nombre: ");
        JTextField f2 = new JTextField();
        f2.setColumns(10);
        JLabel l4 = new JLabel("Direccion: ");
        JTextField f4 = new JTextField();
        f4.setColumns(10);
        panel.add(l1);
        panel.add(f1);
        panel.add(l2);
        panel.add(f2);
        panel.add(l4);
        panel.add(f4);
        
        String[] options = new String[]{"Cancelar", "Aceptar"};
        int option = JOptionPane.showOptionDialog(null, panel, "Crear Catedratico",
                        JOptionPane.NO_OPTION, JOptionPane.PLAIN_MESSAGE,
                        null, options, options[1]);
        if(option == 1) {
            int a1 = Integer.parseInt(f1.getText());
            String a2 = f2.getText();
            String a4 = f4.getText();
            Catedratico catedratico = new Catedratico(a1, a2, a4);
            try {
                Controlador.Estructuras.insertarCatedratico(catedratico);
                JOptionPane.showMessageDialog(null, "Catedratico " + a1 + " insertado con exito, revisar la grafica");
            }catch (TeacherAlreadyExists ex){
                JOptionPane.showMessageDialog(null, ex.getMessage());
            }
            
        }
            
            
        
    }
    
    private void crearEdificio() throws CloneNotSupportedException{
        JPanel panel = new JPanel();
        panel.setLayout(new BoxLayout(panel, BoxLayout.Y_AXIS));
        JLabel l1 = new JLabel("ID: ");
        JTextField f1 = new JTextField();
        f1.setColumns(5);
        panel.add(l1);
        panel.add(f1);
        
        String[] options = new String[]{"Cancelar", "Aceptar"};
        int option = JOptionPane.showOptionDialog(null, panel, "Crear Edificio",
                        JOptionPane.NO_OPTION, JOptionPane.PLAIN_MESSAGE,
                        null, options, options[1]);
        if(option == 1) {
            String a1 = f1.getText();
            Edificio edificio = new Edificio(a1);
            try {
                Controlador.Estructuras.agregarEdificio(edificio);
                JOptionPane.showMessageDialog(null, "Edificio " + a1 + " insertado con exito, revisar la grafica");
            }catch (BuildingAlreadyExists ex){
                JOptionPane.showMessageDialog(null, ex.getMessage());
            }
            
        }
    }
    
    private void crearSalon() throws CloneNotSupportedException{
        JPanel panel = new JPanel();
        panel.setLayout(new BoxLayout(panel, BoxLayout.Y_AXIS));
        JLabel l1 = new JLabel("ID del Edificio: ");
        JTextField f1 = new JTextField();
        f1.setColumns(5);
        JLabel l2 = new JLabel("Numero de Salon: ");
        JTextField f2 = new JTextField();
        f2.setColumns(10);
        JLabel l4 = new JLabel("Capacidad: ");
        JTextField f4 = new JTextField();
        f4.setColumns(10);
        panel.add(l1);
        panel.add(f1);
        panel.add(l2);
        panel.add(f2);
        panel.add(l4);
        panel.add(f4);
        
        String[] options = new String[]{"Cancelar", "Aceptar"};
        int option = JOptionPane.showOptionDialog(null, panel, "Crear Salon",
                        JOptionPane.NO_OPTION, JOptionPane.PLAIN_MESSAGE,
                        null, options, options[1]);
        if(option == 1) {
            String a1 = f1.getText();
            int a2 = Integer.parseInt(f2.getText());
            int a4 = Integer.parseInt(f4.getText());
            try {
                Controlador.Estructuras.agregarSalon(a1, new Salon(a2,a4));
                JOptionPane.showMessageDialog(null, "Salon " + a1 + " insertado con exito en el edificio "+a1+", revisar la grafica");
            }catch (BuildingNotFound ex){
                JOptionPane.showMessageDialog(null, ex.getMessage());
            }
            
        }
            
            
        
    }
    
    private void crearCurso() throws CloneNotSupportedException{
        JPanel panel = new JPanel();
        panel.setLayout(new BoxLayout(panel, BoxLayout.Y_AXIS));
        JLabel l1 = new JLabel("Codigo del Curso: ");
        JTextField f1 = new JTextField();
        f1.setColumns(5);
        JLabel l2 = new JLabel("Nombre del Curso: ");
        JTextField f2 = new JTextField();
        f2.setColumns(10);
        JLabel l4 = new JLabel("Semestre: ");
        JTextField f4 = new JTextField();
        f4.setColumns(10);
        JLabel l5 = new JLabel("Creditos: ");
        JTextField f5 = new JTextField();
        f4.setColumns(10);
        panel.add(l1);
        panel.add(f1);
        panel.add(l2);
        panel.add(f2);
        panel.add(l4);
        panel.add(f4);
        panel.add(l5);
        panel.add(f5);
        
        String[] options = new String[]{"Cancelar", "Aceptar"};
        int option = JOptionPane.showOptionDialog(null, panel, "Crear Curso",
                        JOptionPane.NO_OPTION, JOptionPane.PLAIN_MESSAGE,
                        null, options, options[1]);
        if(option == 1) {
            int a1 = Integer.parseInt(f1.getText());
            String a2 = f2.getText();
            int a3 = Integer.parseInt(f4.getText());
            int a4 = Integer.parseInt(f5.getText());
            Curso curso = new Curso(a1,a2,a3,a4);
            try {
                Controlador.Estructuras.agregarCurso(curso);
                JOptionPane.showMessageDialog(null, "Curso " + a1 + " insertado con exito, revisar la grafica");
            }catch (SubjectAlreadyExists ex){
                JOptionPane.showMessageDialog(null, ex.getMessage());
            }
            
        }
            
            
        
    }
    
    private void crearHorario() throws CloneNotSupportedException, SubjectNotFound, ClassroomNotFound, ParseException{
        JPanel panel = new JPanel();
        panel.setLayout(new BoxLayout(panel, BoxLayout.Y_AXIS));
        JLabel l1 = new JLabel("ID: ");
        JTextField f1 = new JTextField();
        f1.setColumns(5);
        JLabel l2 = new JLabel("Hora Inicial: ");
        JTextField f2 = new JTextField();
        f2.setColumns(10);
        JLabel l3 = new JLabel("Hora Final: ");
        JTextField f3 = new JTextField();
        f3.setColumns(10);
        JLabel l4 = new JLabel("Dia: ");
        JTextField f4 = new JTextField();
        f4.setColumns(10);
        JLabel l5 = new JLabel("Edificio: ");
        JTextField f5 = new JTextField();
        f5.setColumns(10);
        JLabel l6 = new JLabel("Salon: ");
        JTextField f6 = new JTextField();
        f6.setColumns(10);
        JLabel l7 = new JLabel("Codigo del Curso: ");
        JTextField f7 = new JTextField();
        f7.setColumns(10);
        JLabel l8 = new JLabel("Codigo del Catedratico: ");
        JTextField f8 = new JTextField();
        f8.setColumns(10);
        
        panel.add(l1);
        panel.add(f1);
        panel.add(l2);
        panel.add(f2);
        panel.add(l3);
        panel.add(f3);
        panel.add(l4);
        panel.add(f4);
        panel.add(l5);
        panel.add(f5);
        panel.add(l6);
        panel.add(f6);
        panel.add(l7);
        panel.add(f7);
        panel.add(l8);
        panel.add(f8);
        
        String[] options = new String[]{"Cancelar", "Aceptar"};
        int option = JOptionPane.showOptionDialog(null, panel, "Crear Usuario",
                        JOptionPane.NO_OPTION, JOptionPane.PLAIN_MESSAGE,
                        null, options, options[1]);
        if(option == 1) {
            int a1 = Integer.parseInt(f1.getText());
            String a2 = f2.getText();
            String a3 = f3.getText();
            String a4 = f4.getText();
            String a5 = f5.getText();
            int a6 = Integer.parseInt(f6.getText());
            int a7 = Integer.parseInt(f7.getText());
            int a8 = Integer.parseInt(f8.getText());
            try{
                Horario horario = new Horario(a1,a2,a3,a4,a5,a6,a7,a8);
                Controlador.Estructuras.agregarHorario(horario);
                JOptionPane.showMessageDialog(null, "Horario " + a1 + " insertado con exito, revisar la grafica");
            } catch (RepeatedSchedule ex) {
                JOptionPane.showMessageDialog(null, ex.getMessage());
            } catch (NullPointerException ex) {
                JOptionPane.showMessageDialog(null, "El edificio no se encontro");
            } catch (ParseException ex ) {
                JOptionPane.showMessageDialog(null,"Error ingresando las horas");
            } catch (Exception ex ) {
                JOptionPane.showMessageDialog(null,ex.getMessage());
            }
            
        }
       
    }
    
    
    
    
    
    private void buscarHorario() {
        JPanel panel = new JPanel();
        JLabel label = new JLabel("Seleccione un curso");
        JComboBox combo = new JComboBox<>();
        ListaSimple lista = Controlador.Estructuras.horarios.getHorarios();
        NodoSimple aux = lista.inicio;
        Horario horario;
        while(aux != null) {
            horario = (Horario)aux.getInfo();
            combo.addItem(horario.getCodigo()+". "+horario.getCurso().getNombre()+" Hora: " + format.format(horario.getHoraInicial()) + " - " + format.format(horario.getHoraFinal()));
            aux = aux.getSiguiente();
        }
        panel.add(label);
        panel.add(combo);
        String[] options = new String[]{"Cancelar", "Aceptar"};
        int option = JOptionPane.showOptionDialog(null, panel, "Seleccionar cantidad",
                        JOptionPane.NO_OPTION, JOptionPane.PLAIN_MESSAGE,
                        null, options, options[1]);
        if(option == 1) // pressing OK button
        {
            String a = (String) combo.getSelectedItem();
            String b = a.substring(0,a.indexOf("."));
            int no = Integer.parseInt(b);
            new AsignacionesHorario(no,a);
        }
        
        
    }
    
    private long getCarnet(){
        JPanel panel = new JPanel();
        JLabel label = new JLabel("Ingrese el carnet del estudiante");
        JTextField spin = new JTextField(); 
        spin.setColumns(30);
        panel.add(label);
        panel.add(spin);
        String[] options = new String[]{"Cancelar", "Aceptar"};
        int option = JOptionPane.showOptionDialog(null, panel, "Seleccionar cantidad",
                        JOptionPane.NO_OPTION, JOptionPane.PLAIN_MESSAGE,
                        null, options, options[1]);
        if(option == 1) // pressing OK button
        {
            return Long.parseLong(spin.getText());
        }
        return -1;
    }
    
    private int getSemestre(){
        JPanel panel = new JPanel();
        JLabel label = new JLabel("Ingrese el semestre que esta buscando");
        JTextField spin = new JTextField(); 
        spin.setColumns(30);
        panel.add(label);
        panel.add(spin);
        String[] options = new String[]{"Cancelar", "Aceptar"};
        int option = JOptionPane.showOptionDialog(null, panel, "Seleccionar cantidad",
                        JOptionPane.NO_OPTION, JOptionPane.PLAIN_MESSAGE,
                        null, options, options[1]);
        if(option == 1) // pressing OK button
        {
            return Integer.parseInt(spin.getText());
        }
        return -1;
    }
    
    private int getSalon(){
        JPanel panel = new JPanel();
        JLabel label = new JLabel("Ingrese el nombre del edificio");
        JTextField spin = new JTextField(); 
        spin.setColumns(30);
        panel.add(label);
        panel.add(spin);
        JLabel label2 = new JLabel("Ingrese el numero del salon");
        JTextField spin2 = new JTextField(); 
        panel.add(label2);
        panel.add(spin2);
        spin2.setColumns(30);
        String[] options = new String[]{"Cancelar", "Aceptar"};
        int option = JOptionPane.showOptionDialog(null, panel, "Seleccionar cantidad",
                        JOptionPane.NO_OPTION, JOptionPane.PLAIN_MESSAGE,
                        null, options, options[1]);
        if(option == 1) // pressing OK button
        {
            Edificio edificio = Controlador.Estructuras.buscarEdificio(spin.getText());
            if(edificio != null) {
                try {
                    Salon salon = edificio.buscarSalon(Integer.parseInt(spin2.getText()));
                    JOptionPane.showMessageDialog(null, "El salon "+salon.getId()+" fue encontrado");
                    new CursosEnSalon(spin.getText(),Integer.parseInt(spin2.getText()),salon);
                    return salon.getId();
                } catch (ClassroomNotFound | NumberFormatException | NullPointerException ex) {
                    JOptionPane.showMessageDialog(null, "El salon "+spin2.getText()+" no existe en el edificio " + spin.getText());
                }
            } else {
                JOptionPane.showMessageDialog(null, "El edificio " + spin.getText() + " no existe en el sistema");
            }
            
        }
        return -1;
    }
    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton10;
    private javax.swing.JButton jButton11;
    private javax.swing.JButton jButton12;
    private javax.swing.JButton jButton13;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JButton jButton7;
    private javax.swing.JButton jButton8;
    private javax.swing.JButton jButton9;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JMenuItem jMenuItem2;
    private javax.swing.JMenuItem jMenuItem3;
    private javax.swing.JMenuItem jMenuItem4;
    private javax.swing.JMenuItem jMenuItem5;
    // End of variables declaration//GEN-END:variables
}
